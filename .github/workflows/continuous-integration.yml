name: Continuous Integration

on:
  push:
    branches: [ 1.x ]
  pull_request:
    branches: [ 1.x ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.3, 8.4]

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: json, sockets, xml
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit --coverage-text

    - name: Run Psalm
      run: vendor/bin/psalm --show-info=false

    - name: Test MCP server basic functionality
      run: |
        echo '{"jsonrpc":"2.0","id":1,"method":"tools/list"}' | php bin/mcp-skeleton > /tmp/mcp_output.json
        cat /tmp/mcp_output.json
        # Verify it's valid JSON
        php -r "json_decode(file_get_contents('/tmp/mcp_output.json'), true, 512, JSON_THROW_ON_ERROR);"